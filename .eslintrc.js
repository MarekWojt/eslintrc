module.exports = {
  root: true,
  env: {
    node: true,
  },
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/recommended-requiring-type-checking',
    'plugin:vue/vue3-strongly-recommended',
    '@vue/typescript/recommended',
  ],
  parserOptions: {
    ecmaVersion: 2020,
    project: ['./tsconfig.json'],
  },
  rules: {
    // 'no-duplicate-imports': 'error',
    'no-self-compare': 'error',
    'no-template-curly-in-string': 'error',
    'no-unreachable-loop': 'warn',
    'no-unused-private-class-members': 'warn',
    // 'no-use-before-define': ['error', { functions: false }],
    'require-atomic-updates': 'error',
    'no-unused-vars': 'warn',
    'consistent-return': 'error',
    'default-case': 'error',
    'default-case-last': 'error',
    // 'default-param-last': 'error',
    // 'dot-notation': 'error',
    eqeqeq: 'error',
    'func-name-matching': 'error',
    'func-style': ['error', 'declaration', { allowArrowFunctions: true }],
    'grouped-accessor-pairs': 'error',
    'max-depth': 'warn',
    'max-nested-callbacks': 'warn',
    'max-params': ['warn', { max: 5 }],
    'new-cap': 'warn',
    'no-alert': 'warn',
    // 'no-array-constructor': 'error',
    'no-confusing-arrow': 'error',
    'no-console': 'warn',
    'no-else-return': 'error',
    'no-eq-null': 'error',
    'no-eval': 'warn',
    'no-extend-native': 'error',
    'no-extra-bind': 'warn',
    'no-extra-label': 'warn',
    'no-implicit-coercion': 'error',
    'no-implicit-globals': 'error',
    'no-implied-eval': 'error',
    // 'no-invalid-this': 'error',
    'no-iterator': 'error',
    'no-label-var': 'warn',
    'no-lone-blocks': 'warn',
    'no-lonely-if': 'warn',
    // 'no-loop-func': 'error',
    'no-mixed-operators': 'error',
    'no-multi-assign': ['error', { ignoreNonDeclaration: true }],
    'no-negated-condition': 'warn',
    'no-new': 'error',
    'no-new-func': 'error',
    'no-new-object': 'error',
    'no-new-wrappers': 'error',
    'no-param-reassign': 'error',
    'no-proto': 'error',
    'no-return-assign': 'error',
    // 'no-return-await': 'warn',
    'no-script-url': 'error',
    'no-sequences': 'warn',
    // 'no-throw-literal': 'error',
    'no-undef-init': 'error',
    'no-undefined': 'off',
    'no-underscore-dangle': 'error',
    'no-unneeded-ternary': 'error',
    // 'no-unused-expressions': 'warn',
    'no-useless-call': 'warn',
    'no-useless-computed-key': 'error',
    'no-useless-concat': 'warn',
    // 'no-useless-constructor': 'warn',
    'no-useless-rename': 'warn',
    'no-useless-return': 'warn',
    'no-var': 'error',
    'no-void': 'error',
    // 'no-warning-comments': 'warn',
    'object-shorthand': 'error',
    'operator-assignment': 'error',
    'prefer-arrow-callback': 'error',
    'prefer-const': 'warn',
    'prefer-exponentiation-operator': 'error',
    'prefer-numeric-literals': 'error',
    'prefer-object-has-own': 'error',
    'prefer-object-spread': 'error',
    'prefer-promise-reject-errors': 'error',
    'prefer-regex-literals': 'error',
    'prefer-rest-params': 'error',
    'prefer-spread': 'error',
    'prefer-template': 'error',
    'quote-props': ['error', 'as-needed'],
    radix: ['error', 'as-needed'],
    // 'require-await': 'error',
    'spaced-comment': 'error',
    yoda: ['warn', 'never', { onlyEquality: true }],
    // code style
    'array-bracket-newline': ['error', 'consistent'],
    'array-bracket-spacing': ['error', 'never'],
    'array-element-newline': ['error', 'consistent'],
    'arrow-parens': ['error', 'always'],
    'arrow-spacing': 'error',
    'block-spacing': 'error',
    // 'brace-style': ['error', '1tbs', { allowSingleLine: true }],
    camelcase: 'warn',
    // 'comma-dangle': [
    //   'error',
    //   {
    //     arrays: 'always-multiline',
    //     objects: 'always-multiline',
    //     imports: 'always-multiline',
    //     exports: 'always-multiline',
    //     functions: 'only-multiline',
    //   },
    // ],
    // 'comma-spacing': 'error',
    'comma-style': 'error',
    'computed-property-spacing': 'error',
    'dot-location': ['error', 'property'],
    'eol-last': 'error',
    // 'func-call-spacing': 'error',
    'function-call-argument-newline': ['error', 'consistent'],
    'function-paren-newline': ['error', 'consistent'],
    'generator-star-spacing': 'error',
    'implicit-arrow-linebreak': 'error',
    // indent: ['error', 2],
    'jsx-quotes': 'error',
    'key-spacing': 'error',
    // 'keyword-spacing': 'error',
    'linebreak-style': 'error',
    'max-len': ['warn', 140, {
      ignoreUrls: true,
      ignoreStrings: true,
      ignoreTemplateLiterals: true,
      ignoreRegExpLiterals: true,
    }],
    'max-statements-per-line': ['warn', { max: 3 }],
    'multiline-ternary': ['error', 'always-multiline'],
    'new-parens': 'error',
    'newline-per-chained-call': 'error',
    // 'no-extra-parens': ['error', 'all', { returnAssign: false }],
    'no-multi-spaces': 'error',
    'no-multiple-empty-lines': ['warn', { max: 3 }],
    'no-tabs': 'error',
    'no-trailing-spaces': 'error',
    'no-whitespace-before-property': 'error',
    'nonblock-statement-body-position': 'error',
    'object-curly-newline': 'error',
    // 'object-curly-spacing': ['error', 'always', { objectsInObjects: false }],
    'object-property-newline': ['error', { allowAllPropertiesOnSameLine: true }],
    'operator-linebreak': ['error', 'after', { overrides: { '?': 'before', ':': 'before', '??': 'before' }}],
    'padded-blocks': ['error', 'never'],
    // quotes: ['error', 'single', { avoidEscape: true }],
    'rest-spread-spacing': 'error',
    // semi: ['error', 'always', { omitLastInOneLineBlock: true }],
    'semi-spacing': 'error',
    'semi-style': 'error',
    'space-before-blocks': 'error',
    // 'space-before-function-paren': ['error', {
    //   anonymous: 'never',
    //   named: 'never',
    //   asyncArrow: 'always',
    // }],
    'space-in-parens': ['error', 'never'],
    // 'space-infix-ops': ['error', { int32Hint: true }],
    'space-unary-ops': ['error', { words: true, nonwords: false }],
    'switch-colon-spacing': 'error',
    'template-curly-spacing': 'error',
    'template-tag-spacing': 'error',
    'wrap-iife': ['error', 'any'],
    'wrap-regex': 'error',
    'yield-star-spacing': 'error',
    // vue
    'vue/singleline-html-element-content-newline': 'off',
    'vue/max-attributes-per-line': ['warn', {
      singleline: {
        max: 5,
      },
      multiline: {
        max: 1,
      },
    }],
    'vue/html-self-closing': ['warn', {
      html: {
        void: 'always',
        normal: 'always',
        component: 'always',
      },
      svg: 'always',
      math: 'always',
    }],
    'vue/attributes-order': 'warn',
    'vue/component-tags-order': 'warn',
    'vue/no-lone-template': 'warn',
    'vue/no-multiple-slot-args': 'error',
    'vue/order-in-components': 'warn',
    'vue/this-in-template': 'error',
    'vue/block-lang': ['error',
      {
        script: {
          lang: 'ts',
        },
      }],
    'vue/block-tag-newline': 'error',
    'vue/component-api-style': 'error',
    'vue/component-name-in-template-casing': 'error',
    'vue/component-options-name-casing': 'error',
    'vue/custom-event-name-casing': 'error',
    'vue/html-button-has-type': 'error',
    'vue/html-comment-content-newline': 'warn',
    'vue/html-comment-content-spacing': 'warn',
    'vue/html-comment-indent': 'warn',
    'vue/match-component-file-name': 'error',
    'vue/next-tick-style': 'error',
    // 'vue/no-bare-strings-in-template': 'warn',
    'vue/no-boolean-default': ['error', 'default-false'],
    'vue/no-child-content': 'warn',
    'vue/no-duplicate-attr-inheritance': 'error',
    'vue/no-empty-component-block': 'warn',
    'vue/no-expose-after-await': 'warn',
    'vue/no-invalid-model-keys': 'warn',
    'vue/no-multiple-objects-in-class': 'error',
    'vue/no-potential-component-option-typo': 'warn',
    'vue/no-reserved-component-names': ['error', { disallowVue3BuiltInComponents: true }],
    // disallow components starting with v- ?
    'vue/no-static-inline-styles': 'warn',
    'vue/no-this-in-before-route-enter': 'error',
    'vue/no-undef-components': ['warn', { ignorePatterns: ['v-.*', 'router-view'] }],
    'vue/no-undef-properties': 'warn',
    'vue/no-unsupported-features': 'warn',
    'vue/no-unused-properties': 'warn',
    'vue/no-unused-refs': 'warn',
    'vue/no-use-computed-property-like-method': 'error',
    'vue/no-useless-mustaches': 'warn',
    'vue/no-useless-v-bind': 'warn',
    'vue/no-v-text-v-html-on-component': 'error',
    'vue/no-v-text': 'error',
    'vue/padding-line-between-blocks': 'error',
    'vue/prefer-import-from-vue': 'error',
    'vue/prefer-separate-static-class': 'warn',
    'vue/prefer-true-attribute-shorthand': 'error',
    'vue/require-direct-export': 'error',
    'vue/require-emit-validator': 'error',
    'vue/require-expose': 'warn',
    'vue/require-name-property': 'warn',
    'vue/script-indent': 'error',
    'vue/v-for-delimiter-style': 'error',
    'vue/v-on-function-call': 'warn',
    // vue extensions
    'vue/array-bracket-newline': 'error',
    'vue/array-bracket-spacing': 'error',
    'vue/arrow-spacing': 'error',
    'vue/block-spacing': 'error',
    'vue/camelcase': 'warn',
    'vue/comma-dangle': 'error',
    'vue/comma-spacing': 'error',
    'vue/comma-style': 'error',
    'vue/dot-location': 'error',
    'vue/eqeqeq': 'error',
    'vue/func-call-spacing': 'error',
    'vue/key-spacing': 'error',
    'vue/keyword-spacing': 'error',
    'vue/max-len': ['warn', 140, {
      ignoreComments: true,
      ignoreUrls: true,
      ignoreStrings: true,
      ignoreTemplateLiterals: true,
      ignoreRegExpLiterals: true,
      ignoreHTMLAttributeValues: true,
      ignoreHTMLTextContents: true,
    }],
    'vue/no-constant-condition': 'error',
    'vue/no-empty-pattern': 'error',
    'vue/no-extra-parens': 'error',
    'vue/no-irregular-whitespace': 'error',
    'vue/no-loss-of-precision': 'error',
    'vue/no-restricted-syntax': 'error',
    'vue/no-sparse-arrays': 'error',
    'vue/no-useless-concat': 'error',
    'vue/object-curly-newline': 'error',
    'vue/object-curly-spacing': 'error',
    'vue/object-property-newline': 'error',
    'vue/object-shorthand': 'error',
    'vue/operator-linebreak': 'error',
    'vue/prefer-template': 'error',
    'vue/quote-props': 'error',
    'vue/space-in-parens': 'error',
    'vue/space-infix-ops': 'error',
    'vue/space-unary-ops': 'error',
    'vue/template-curly-spacing': 'error',
    // typescript
    '@typescript-eslint/no-unsafe-assignment': 'warn',
    '@typescript-eslint/no-unsafe-return': 'warn',
    '@typescript-eslint/no-unsafe-call': 'warn',
    '@typescript-eslint/array-type': ['warn', {
      default: 'array-simple',
    }],
    '@typescript-eslint/ban-tslint-comment': 'warn',
    '@typescript-eslint/class-literal-property-style': ['warn', 'getters'],
    '@typescript-eslint/consistent-indexed-object-style': 'error',
    '@typescript-eslint/consistent-type-assertions': ['error', {
      assertionStyle: 'as',
      objectLiteralTypeAssertions: 'allow-as-parameter',
    }],
    '@typescript-eslint/consistent-type-definitions': ['error', 'interface'],
    '@typescript-eslint/consistent-type-exports': 'warn',
    '@typescript-eslint/consistent-type-imports': 'warn',
    '@typescript-eslint/member-delimiter-style': ['error', {
      multiline: {
        delimiter: 'comma',
        requireLast: true,
      },
      singleline: {
        delimiter: 'comma',
        requireLast: false,
      },
      multilineDetection: 'brackets',
    }],
    '@typescript-eslint/member-ordering': ['warn', {
      default: {
        memberTypes: [
          'signature',

          'public-static-field',
          'protected-static-field',
          'private-static-field',
          'static-field',

          'public-decorated-field',
          'protected-decorated-field',
          'private-decorated-field',
          'decorated-field',

          'public-instance-field',
          'protected-instance-field',
          'private-instance-field',
          'instance-field',

          'public-abstract-field',
          'protected-abstract-field',
          'private-abstract-field',
          'abstract-field',

          'public-field',
          'protected-field',
          'private-field',
          'field',


          'public-constructor',
          'protected-constructor',
          'private-constructor',
          'constructor',


          'public-static-get',
          'protected-static-get',
          'private-static-get',
          'static-get',

          'public-decorated-get',
          'protected-decorated-get',
          'private-decorated-get',
          'decorated-get',

          'public-instance-get',
          'protected-instance-get',
          'private-instance-get',
          'instance-get',

          'public-abstract-get',
          'protected-abstract-get',
          'private-abstract-get',
          'abstract-get',

          'public-get',
          'protected-get',
          'private-get',
          'get',


          'public-static-set',
          'protected-static-set',
          'private-static-set',
          'static-set',

          'public-decorated-set',
          'protected-decorated-set',
          'private-decorated-set',
          'decorated-set',

          'public-instance-set',
          'protected-instance-set',
          'private-instance-set',
          'instance-set',

          'public-abstract-set',
          'protected-abstract-set',
          'private-abstract-set',
          'abstract-set',

          'public-set',
          'protected-set',
          'private-set',
          'set',


          'public-static-method',
          'protected-static-method',
          'private-static-method',
          'static-method',

          'public-decorated-method',
          'protected-decorated-method',
          'private-decorated-method',
          'decorated-method',

          'public-instance-method',
          'protected-instance-method',
          'private-instance-method',
          'instance-method',

          'public-abstract-method',
          'protected-abstract-method',
          'private-abstract-method',
          'abstract-method',

          'public-method',
          'protected-method',
          'private-method',
          'method',
        ],
        order: 'as-written',
      },
    }],
    '@typescript-eslint/method-signature-style': 'error',
    '@typescript-eslint/naming-convention': [
      'warn',
      {
        selector: 'default',
        format: ['camelCase'],
        leadingUnderscore: 'allow',
        trailingUnderscore: 'allow',
      },

      {
        selector: 'variable',
        format: ['camelCase', 'UPPER_CASE'],
        leadingUnderscore: 'allow',
        trailingUnderscore: 'allow',
      },

      {
        selector: 'enumMember',
        format: ['PascalCase'],
        leadingUnderscore: 'allow',
        trailingUnderscore: 'allow',
      },

      {
        selector: 'typeLike',
        format: ['PascalCase'],
      },
    ],
    '@typescript-eslint/no-base-to-string': 'warn',
    '@typescript-eslint/no-confusing-non-null-assertion': 'error',
    '@typescript-eslint/no-confusing-void-expression': ['warn', { ignoreVoidOperator: true }],
    '@typescript-eslint/no-empty-interface': 'warn',
    '@typescript-eslint/no-empty-function': ['warn', { allow: ['arrowFunctions'] }],
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/no-extraneous-class': 'error',
    '@typescript-eslint/no-invalid-void-type': 'error',
    '@typescript-eslint/no-meaningless-void-operator': 'error',
    '@typescript-eslint/no-non-null-asserted-nullish-coalescing': 'error',
    '@typescript-eslint/no-require-imports': 'warn',
    '@typescript-eslint/no-unnecessary-boolean-literal-compare': 'error',
    '@typescript-eslint/no-unnecessary-condition': 'error',
    '@typescript-eslint/no-unnecessary-qualifier': 'error',
    '@typescript-eslint/no-unnecessary-type-arguments': 'warn',
    '@typescript-eslint/non-nullable-type-assertion-style': 'error',
    '@typescript-eslint/prefer-for-of': 'error',
    '@typescript-eslint/prefer-includes': 'error',
    '@typescript-eslint/prefer-nullish-coalescing': 'error',
    '@typescript-eslint/prefer-optional-chain': 'error',
    '@typescript-eslint/prefer-readonly': 'warn',
    '@typescript-eslint/prefer-regexp-exec': 'warn',
    '@typescript-eslint/prefer-return-this-type': 'error',
    '@typescript-eslint/prefer-string-starts-ends-with': 'error',
    '@typescript-eslint/prefer-ts-expect-error': 'error',
    '@typescript-eslint/promise-function-async': 'error',
    '@typescript-eslint/sort-type-union-intersection-members': 'warn', // remove?
    '@typescript-eslint/switch-exhaustiveness-check': 'warn',
    '@typescript-eslint/type-annotation-spacing': 'error',
    '@typescript-eslint/unified-signatures': 'warn',
    // typescript extensions
    '@typescript-eslint/brace-style': ['error', '1tbs', { allowSingleLine: true }],
    '@typescript-eslint/comma-dangle': ['error', {
      arrays: 'always-multiline',
      objects: 'always-multiline',
      imports: 'always-multiline',
      exports: 'always-multiline',
      functions: 'only-multiline',
      enums: 'always-multiline',
      generics: 'only-multiline',
      tuples: 'always-multiline',
    }],
    '@typescript-eslint/comma-spacing': 'error',
    '@typescript-eslint/default-param-last': 'error',
    '@typescript-eslint/dot-notation': 'error',
    '@typescript-eslint/func-call-spacing': 'error',
    '@typescript-eslint/indent': ['error', 2],
    '@typescript-eslint/keyword-spacing': 'error',
    '@typescript-eslint/no-array-constructor': 'error',
    '@typescript-eslint/no-dupe-class-members': 'error',
    '@typescript-eslint/no-duplicate-imports': 'error',
    '@typescript-eslint/no-extra-parens': ['error', 'all', {
      returnAssign: false,
      nestedBinaryExpressions: false,
      enforceForNewInMemberExpressions: false,
      enforceForFunctionPrototypeMethods: false,
    }],
    '@typescript-eslint/no-invalid-this': 'error',
    '@typescript-eslint/no-loop-func': 'error',
    '@typescript-eslint/no-redeclare': 'error',
    '@typescript-eslint/no-throw-literal': 'error',
    '@typescript-eslint/no-unused-expressions': 'warn',
    '@typescript-eslint/no-use-before-define': ['error', {
      functions: false,
      enums: false,
      ignoreTypeReferences: true,
    }],
    '@typescript-eslint/no-useless-constructor': 'warn',
    '@typescript-eslint/object-curly-spacing': ['error', 'always', { objectsInObjects: false }],
    '@typescript-eslint/quotes': ['error', 'single'],
    '@typescript-eslint/return-await': ['warn', 'never'],
    '@typescript-eslint/semi': ['error', 'always', { omitLastInOneLineBlock: true }],
    '@typescript-eslint/space-before-function-paren': ['error', {
      anonymous: 'never',
      named: 'never',
      asyncArrow: 'always',
    }],
    '@typescript-eslint/space-infix-ops': ['error', { int32Hint: true }],
  },
  overrides: [
    {
      files: ['vite.config.ts', '.eslintrc.js'],
      rules: {
        '@typescript-eslint/naming-convention': 'off',
      },
    },
    {
      files: 'src/registerServiceWorker.ts',
      rules: {
        'no-console': 'off',
      },
    },
  ],
};
